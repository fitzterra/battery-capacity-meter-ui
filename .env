# Runtime environment
# This file contains all possible environment variables that is required to run
# deploy, test, etc. this app.
#
# The format is standard shell environment setup, i.e. no spaces around '=' and
# values are given verbatim without quotes, or references to other variables.
# This file is imported by both the Makefile and the docker-compose.yml file,
# and should conform to both these environments.
#
# This file is versioned to serve as template and also to set any defaults that
# might make sense.
# Any of these values can be overwritten, and for some, MUST be supplied via
# local environment setup file called .env_local - which is NOT versioned.
#
# In the dev environment, a .env_local file should be created to override or
# supply the values.
#
# For CI/CD build or deployment, they should be supplied as CI/CD variables in
# the repo, but each variable name should be prefixed with LOC_.
# The .gitlab-ci.yml file has a before_script shell function that will look for
# all environment variables prefixed with LOC_, strip the prefix and write the
# remainder of the name and value to a .env_local file before running any make
# targets for build or deployment, etc.
#
# Doing it this way means that all build, deployment, etc. functionality can be
# built into the Makefile which makes it easier to test and debug all
# functions. The CI pipeline is then very simple and only runs make recipes to
# do whatever it needs to.

# Database
DB_HOST=
# Default PostgreSQL port
DB_PORT=5432
# These must be set in .env_local or as LOC_?? in GitLan CI/CD Variables
DB_USER=
DB_PASS=
DB_NAME=
# These are the default prod and UAT DB names. These names are ONLY used by the
# make db-clone-uat target in the Makefile. If prod and uat names are different
# to these names due to them being set in in .env_local (for UAT) or in GitLab
# CI/CD Variable LOC_DB_NAME from prod, then the clone command can still be run
# as :
# DB_NAME_PROD=foo DB_NAME_UAT=bar make db-clone-uat
DB_NAME_PROD=battery_cap
DB_NAME_UAT=battery_cap_uat

# Application
APP_LOGLEVEL=INFO
APP_INTF=0.0.0.0
APP_PORT=8000
# These are additional args to pass to uvicorn when running from docker compose
# NOTE: This is only for reloading if files changes while in a dev environment.
#       In prod these args are not needed.
UV_ARGS=--reload --reload-dir app --reload-include *.py --reload-include templates/*.html

# Docker image and registry details
REGISTRY=darwin:5000
IMAGE_NAME=bat-cap-ui
COMPOSE_FILE=docker-compose.yml
# This should probably be in an env file and imported into the environment
# both for here and also for the compose file.
CONTAINER_NAME=bat-cap-ui
# The docker host, port and user for deployment. The port will be 
DEPLOY_HOST=
DEPLOY_PORT=8088
DEPLOY_USER=
# The name of the image to use when running as docker container
DEPLOY_NAME=bat-cap-ui
